<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.RealTimeMediaCalling</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall">
            <summary>
            Interface for the bot to handle events for a real-time media call and to make outgoing requests.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall.CallService">
            <summary>
            Service that helps process incoming requests and send outgoing requests
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseType">
            <summary>
            Type of responses returned to the bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseType.Accepted">
            <summary>
            Request was accepted or processed.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseType.BadRequest">
            <summary>
            Request was semantically/syntactically invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseType.NotFound">
            <summary>
            The call for the incoming callback or notification is no longer active.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseResult">
            <summary>
            Stores the type of the response and the content
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseResult.ResponseType">
            <summary>
            Type of the response
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseResult.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseResult.#ctor(Microsoft.Bot.Builder.RealTimeMediaCalling.ResponseType,System.String)">
            <summary>
            Creates ResponseResult with the type of the response and the content
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeCallProcessor">
            <summary>
            Processes the incoming requests and invokes the appropriate handlers for the call
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeCallProcessor.ProcessIncomingCallAsync(System.String,System.String)">
            <summary>
            Processes incoming call request
            </summary>
            <param name="content">Content from the request</param>
            <param name="skypeChainId">X-Microsoft-Skype-Chain-Id header value used to associate calls across different services</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeCallProcessor.ProcessCallbackAsync(System.String)">
            <summary>
            Processes requests sent to the callback url
            </summary>
            <param name="content">Content from the request</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeCallProcessor.ProcessNotificationAsync(System.String)">
            <summary>
            Processes requests sent to notification url
            </summary>
            <param name="content">Content from the request</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.LoggingMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Log the request and response.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingContext">
            <summary>
            The context for this request. It parses the request into <see cref="T:Microsoft.Bot.Builder.Calling.ParsedCallingRequest"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingContext.Request">
            <summary>
            The calling request.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingContext.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates a new instance of calling context. 
            </summary>
            <param name="request"> The calling request.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingContext.ProcessRequest(Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType)">
            <summary>
            Process the calling request and returns <see cref="T:Microsoft.Bot.Builder.Calling.ParsedCallingRequest"/>.
            </summary>
            <param name="callType"> The type of request.</param>
            <returns> The parsed request.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent">
            <summary>
            EventArg for the OnAnswerAppHostedMediaCompleted event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent.#ctor(Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult,Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow,Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMediaOutcome)">
            <summary>
            EventArg for the OnAnswerAppHostedMediaCompleted event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
            <param name="conversationResult">ConversationResult corresponding to the event</param>
            <param name="resultingWorkflow">Workflow to be returned on completion</param>
            <param name="outcome">outcome of the operation</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent.AnswerAppHostedMediaOutcome">
            <summary>
            Outcome of AnswerAppHostedMedia action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.AnswerAppHostedMediaOutcomeEvent.RealTimeMediaWorkflow">
            <summary>
            Workflow associated with the AnswerAppHostedMediaOutcome event
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent">
            <summary>
            EventArg for the OnIncomingCallReceived event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent.#ctor(Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Conversation,Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow)">
            <summary>
            EventArg for the RealTimeMediaIncomingCallEvent event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
            <param name="conversation">Conversation for the incoming call</param>
            <param name="resultingWorkflow">Workflow to be returned on completion</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaIncomingCallEvent.RealTimeMediaWorkflow">
            <summary>
            Workflow associated with the event
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent">
            <summary>
            EventArg for the OnWorkflowValidationFailed event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent.#ctor(Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult,Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow,Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.WorkflowValidationOutcome)">
            <summary>
            EventArg for the OnWorkflowValidationFailed event raised on <see cref="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService"/>.
            </summary>
            <param name="conversationResult">ConversationResult corresponding to the event</param>
            <param name="resultingWorkflow">Workflow to be returned on completion</param>
            <param name="outcome">outcome of the operation</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.Events.RealTimeMediaWorkflowValidationOutcomeEvent.RealTimeMediaWorkflow">
            <summary>
            Workflow associated with the OnWorkflowValidationFailed event
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService">
            <summary>
            Service interface that invokes the appropriate events on an incoming real-time media call and provides functions to make outgoing requests for that call.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.CorrelationId">
            <summary>
            Id used for correlating logs across different services
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnIncomingCallReceived">
            <summary>
            Event raised when bot receives incoming call
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnWorkflowValidationFailed">
            <summary>
            Event raised when specified workflow fails to be validated by Bot platform
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnAnswerAppHostedMediaCompleted">
            <summary>
            Event raised when the bot gets the outcome of AnswerAppHostedMedia action. If the operation was successful the call is established
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnCallStateChangeNotification">
            <summary>
            Event raised when the bot gets call state change notification
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnRosterUpdateNotification">
            <summary>
            Event raised when bot gets roster update notification
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.OnCallCleanup">
            <summary>
            Event raised when bot needs to cleanup the call
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.Subscribe(Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription)">
            <summary>
            Subscribe to video or video-based screen sharing channel
            </summary>
            <param name="videoSubscription">Details regarding the subscription like the source to subscribe, socket on which subscription needs to be done, etc</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService.EndCall">
            <summary>
            Terminate the call
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaActionConverter">
            <summary>
            By default Json.net doesn't know how to deserialize JSON data into Interfaces or abstract classes.
            This custom Converter helps deserialize "actions" specified in JSON into respective concrete "action" classes.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMedia">
            <summary>
            This is the action which customers can specify to indicate that the platform should accept the call but that the
            bot will host the media.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMedia.#ctor">
            <summary>
            Create AnswerAppHostedMedia action as a standalone action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMedia.MediaConfiguration">
            <summary>
            Opaque object to pass media configuration from the bot to the ExecutionAgent.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMedia.Validate">
            <summary>
            Validate the action.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMediaOutcome">
            <summary>
            This is the outcome of the "answerAppHostedMedia" action. This is conveyed to the customer as POST to the customer CallBack Url.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.AnswerAppHostedMediaOutcome.#ctor">
            <summary>
            Create the outcome of AnswerAppHostedMedia action
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification">
            <summary>
            This concrete class defines the call state change notification schema.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification.CurrentState">
            <summary>
            Call state types that will be used as part of call state change notification to the app.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification.StateChangeCode">
            <summary>
            Optional code explaining reason for call state change.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.CallStateChangeNotification.#ctor">
            <summary>
            Create notification for call state changes.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase">
            <summary>
            This base class defines a subset of properties which define a notification.
            CallStateNotification and RosterUpdates are examples of Notifications.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase.Id">
            <summary>
            Unique identifier for call leg.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase.Type">
            <summary>
            Type of Notification
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase.AdditionalData">
            <summary>
            Extension data for the fields that are not part of schema.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase.Validate">
            <summary>
            Validation method to verify notification is well formed.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationConverter">
            <summary>
            By default Json.net doesn't know how to deserialize JSON data into Interfaces or abstract classes.
            This custom Converter helps deserialize "Notifications" specified in JSON into respective concrete "Notification" classes.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationResponse">
            <summary>
            This class contains the response the customer sent for the notification POST to their callback url.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationResponse.Links">
            <summary>
            Callback link to call back the customer on, once we have processed the notification response from customer.
            
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationResponse.AppState">
            <summary>
            Opaque string to facilitate app developers to pass their custom data in this field. 
            This field is echo'd back in the 'result' POST for this 'response'.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationResponse.Validate">
            <summary>
            Validate the NotificationResponse
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaOperationOutcomeConverter">
            <summary>
            By default Json.net doesn't know how to deserialize JSON data into Interfaces or abstract classes.
            This custom Converter helps deserialize "operationOutcomes" specified in JSON into respective concrete "OperationOutcome" classes.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant">
            <summary>
            This class defines a participant object within a rosterUpdate message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.Identity">
            <summary>
            MRI of the participant
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.MediaType">
            <summary>
            Participant Media Type . ex : audio
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.MediaStreamDirection">
            <summary>
            Direction of media . ex : SendReceive
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.MediaStreamId">
            <summary>
            This is the "sourceId" of the mediaStream as represented in the roster internal wire protocol.
            This is in actuality an uint but for future simplicity in mind, we are using a string to allow other types.
            This field will have a valid unique value for audio, video and vbss modality. 
            ContentSharing modality doesn't have a sourceId.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.ContentSharingRole">
            <summary>
            Indicates if participant is an Attendee or a Presenter if a content sharing session is ongoing
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.LegId">
            <summary>
            Conversation leg id of this participant in the call.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterParticipant.Validate">
            <summary>
            Validate the RosterParticipant.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.ContentSharingRole">
            <summary>
            Represents the Role the participant might be playing in a Content Sharing session
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.ContentSharingRole.None">
            <summary>
            The participant is not in any content sharing session
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.ContentSharingRole.Presenter">
            <summary>
            The participant is the presenter in a content sharing session
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.ContentSharingRole.Attendee">
            <summary>
            The participant is an attendee in a content sharing session
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification">
            <summary>
            This defines the set of the properties that define a rosterUpdate. 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification.Participants">
            <summary>
            List of participants in the conversation
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification.#ctor">
            <summary>
            Create a notification for roster updates
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RosterUpdateNotification.Validate">
            <summary>
            Validate the notification.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidActions">
            <summary>
            This is a helper class for validating actions specified by customers
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidActions.AnswerAppHostedMediaAction">
            <summary>
            AnswerAppHostedMediaAction
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidActions.VideoSubscriptionAction">
            <summary>
            VideoSubscription
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidActions.actionOrder">
            <summary>
            Dictionary of valid actions and their relative order
            +ve order reflect operations after and including call acceptance
            -ve order reflect operations pre-call answering . ex: reject/redirect/sequentialRing
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidOutcomes">
            <summary>
            This is a helper class for validating outcomes. This can be used by customers or by us (before we send the outcome on the wire) 
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidOutcomes.AnswerAppHostedMediaOutcome">
            <summary>
            AnswerAppHostedMediaOutcome
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaValidOutcomes.VideoSubscriptionOutcome">
            <summary>
            VideoSubscriptionOutcome
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription">
            <summary>
            This class defines the details needed to subscribe to a participant for a video channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.SocketId">
            <summary>
            Sequence ID of video socket. Index from 0-9 that is passed in the MediaConfiguration
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.ParticipantIdentity">
            <summary>
            Identity of the participant whose video is pinned if VideoMode is set to controlled
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.VideoModality">
            <summary>
            Indicates whether the video is from the camera or from screen sharing
            Unknown, Video and VideoBasedScreenSharing are supported modalities for this request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.VideoResolution">
            <summary>
            Indicates the video resolution format.Default value is "sd360p".
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.#ctor">
            <summary>
            Create a VideoSubscription action.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription.Validate">
            <summary>
            Validate the action.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscriptionOutcome">
            <summary>
            This is the outcome of the "videoSubscription" action. 
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscriptionOutcome.#ctor">
            <summary>
            Creates outcome of type VideoSubscriptionOutcome.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow">
            <summary>
            This class contains the workflow the customer sent for the OnInComingCall POST or any subsequent POST to their callback url.
            Basically this workflow defines the set of actions, the customer wants us to perform and then callback to them.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow.NotificationSubscriptions">
            <summary>
            This element indicates that application wants to receive notification updates. 
            Call state notifications are added to this list by default and cannot be unsubscribed to.
            Subscriptions to rosterUpdate are only used for multiParty calls.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.RealTimeMediaWorkflow.Validate(System.Boolean)">
            <summary>
            Validate the Workflow.
            </summary>
            <param name="expectEmptyActions"></param>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationType">
            <summary>
            List of various notification types 
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationType.Unknown">
            <summary>
            Not recognized notification type.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationType.RosterUpdate">
            <summary>
            Roster Update Notification
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationType.CallStateChange">
            <summary>
            Call State change notification
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer">
            <summary>
            Helper class for serializing/deserializing
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer.SerializeToJson(System.Object,System.Boolean)">
            <summary>
            Serialize input object to string
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer.SerializeToJToken(System.Object)">
            <summary>
            Serialize to JToken
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer.DeserializeFromJson``1(System.String)">
            <summary>
            Deserialize input string to object
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer.DeserializeFromJToken``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Deserialize from JToken
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Misc.RealTimeMediaSerializer.GetSerializerSettings(Newtonsoft.Json.Formatting)">
            <summary>
            Returns default serializer settings.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings">
            <summary>
            Configuration settings for the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings.CallbackUrl">
            <summary>
            The url where the calling callbacks to the bot will be sent. Needs to match the domain name of service and the route configured in the controllers.
            For example "https://testservice.azurewebsites.net/api/calling/callback"   
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings.NotificationUrl">
            <summary>
            Url where notifications to the bot will be sent. Needs to match the domain name of service and the route configured in the controllers.
            For example "https://testservice.azurewebsites.net/api/calling/notification" 
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCalling">
            <summary>
            The top level class that is used to register the bot for enabling real-time media communication
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCalling.RegisterRealTimeMediaCallingBot(System.Func{Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService,Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall},Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings)">
            <summary>
            Register the function to be called to create a bot along with configuration settings.
            </summary>
            <param name="makeCallingBot"> The factory method to make the real time media calling bot.</param>
            <param name="realTimeBotServiceSettings"> Configuration settings for the real time media calling bot.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCalling.SendAsync(System.Net.Http.HttpRequestMessage,Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType)">
            <summary>
            Process an incoming request
            </summary>
            <param name="toBot"> The calling request sent to the bot.</param>
            <param name="callRequestType"> The type of calling request.</param>
            <returns> The response from the bot.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType">
            <summary>
            The type of request to this bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType.IncomingCall">
            <summary>
            A new call is received.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType.CallingEvent">
            <summary>
            Callback associated for the call is received.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallRequestType.NotificationEvent">
            <summary>
            Notifications - like roster change/call status change for the call is received.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingModule">
            <summary>
            Autofac module for real-time media calling components.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingModule_MakeBot">
            <summary>
            Module for real-media calling
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallingModule_MakeBot.Register(Autofac.ILifetimeScope,System.Func{Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService,Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall},Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings)">
            <summary>
            Register the function to create a bot and to retrieve bot settings
            </summary>
            <param name="scope"></param>
            <param name="makeCallingBot"></param>
            <param name="RealTimeMediaCallingSettings"></param>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor">
            <summary>
            Processes the incoming requests and invokes the appropriate handlers for the call
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor._activeCalls">
            <summary>
            Container for the current active calls on this instance.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor._settings">
            <summary>
            Configuration settings
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor._makeBot">
            <summary>
            Function to create a bot to deliver events
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor.#ctor(Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings,System.Func{Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService,Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall})">
            <summary>
            Instantiates the call processor
            </summary>
            <param name="settings">Configuration settings</param>
            <param name="makeBot">Function to create a bot</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor.ProcessIncomingCallAsync(System.String,System.String)">
            <summary>
            Method responsible for processing the data sent with POST request to incoming call URL
            </summary>
            <param name="content">The content of request</param>
            <param name="skypeChainId">X-Microsoft-Skype-Chain-Id header value used to associate calls across different services</param>
            <returns>Returns the response that should be sent to the sender of POST request</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor.ProcessCallbackAsync(System.String)">
            <summary>
            Method responsible for processing the data sent with POST request to callback URL
            </summary>
            <param name="content">The content of request</param>
            <returns>Returns the response that should be sent to the sender of POST request</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeCallProcessor.ProcessNotificationAsync(System.String)">
            <summary>
            Method responsible for processing the data sent with POST request to notification URL
            </summary>
            <param name="content">The content of request</param>
            <returns>Returns the response that should be sent to the sender of POST request</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService">
            <summary>
            Service that handles per call requests
            </summary>            
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.CallLegId">
            <summary>
            Id for this call
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.CorrelationId">
            <summary>
            CorrelationId for this call.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnIncomingCallReceived">
            <summary>
            Event raised when bot receives incoming call
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnAnswerAppHostedMediaCompleted">
            <summary>
            Event raised when the bot gets the outcome of Answer action. If the operation was successful the call is established
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnWorkflowValidationFailed">
            <summary>
            Event raised when specified workflow fails to be validated by Bot platform
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnCallStateChangeNotification">
            <summary>
            Event raised when bot receives call state change notification
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnRosterUpdateNotification">
            <summary>
            Event raised when bot receives roster update notification
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.OnCallCleanup">
            <summary>
            Event raised when bot needs to cleanup an existing call
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.#ctor(System.String,System.String,System.Func{Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallService,Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCall},Microsoft.Bot.Builder.RealTimeMediaCalling.IRealTimeMediaCallServiceSettings)">
            <summary>
            Instantiates the service with settings to handle a call
            </summary>
            <param name="callId"></param>
            <param name="skypeChainId"></param>
            <param name="makeBot"></param>
            <param name="settings"></param>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.CallExpiredTimerCallback(System.Object)">
            <summary>
            Keeps track of receiving AnswerAppHostedMediaOutcome. If the answer does not come back, bot can start leaking sockets.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.ProcessNotificationResult(Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.NotificationBase)">
            <summary>
            Invokes notifications on the bot
            </summary>
            <param name="notification">Notification to be sent</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.ProcessConversationResult(Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult)">
            <summary>
            Invokes handlers for callback on the bot
            </summary>
            <param name="conversationResult">ConversationResult that has the details of the callback</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.HandleIncomingCall(Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Conversation)">
            <summary>
            Invokes handler for incoming call
            </summary>
            <param name="conversation">Conversation corresponding to the incoming call</param>
            <returns>WorkFlow to be executed for the call</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.Subscribe(Microsoft.Bot.Builder.RealTimeMediaCalling.ObjectModel.Contracts.VideoSubscription)">
            <summary>
            Subscribe to a video or video based screen sharing channel
            </summary>
            <param name="videoSubscription"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.RealTimeMediaCalling.RealTimeMediaCallService.EndCall">
            <summary>
            Ends the call. Local cleanup will not be done
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
